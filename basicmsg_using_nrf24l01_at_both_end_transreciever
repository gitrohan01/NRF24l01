// basic code for creating a dashboard where transmitter transmits msg and receiver receives it. 
// we also developed the basic ui interface for the receiver end.

//transmitter code:
#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>

RF24 radio(4, 5); // CE, CSN
const byte address[6] = "00001";

const char* messages[] = {
  "Hello Earth!",
  "Space Club Rocks!",
  "ESP32 is awesome",
  "NRF24L01 test",
  "Random Message",
  "Dhole Patil FTW",
  "Weather Clean",
  "Sky Clear Today"
};

char message[32]; // Message buffer

void setup() {
  Serial.begin(115200);
  delay(1000);

  if (!radio.begin()) {
    Serial.println("‚ùå NRF24L01 not found!");
    while (1);
  }

  radio.setPALevel(RF24_PA_LOW);
  radio.setChannel(108);
  radio.setDataRate(RF24_250KBPS);
  radio.openWritingPipe(address);
  radio.stopListening();

  Serial.println("‚úÖ Transmitter Ready!");
}

void loop() {
  const char* randomMsg = messages[random(0, 8)];
  strncpy(message, randomMsg, sizeof(message));

  bool sent = radio.write(&message, sizeof(message));
  Serial.print("Sending: ");
  Serial.println(message);
  Serial.println(sent ? "‚úÖ Sent" : "‚ùå Failed");

  delay(3000);
}

//reciver end code: 

#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
#include <WiFi.h>

RF24 radio(4, 5); // CE, CSN
const byte address[6] = "00001";

const char* ssid = "Rdx";
const char* password = "abcd1234";

WiFiServer server(80);
char message[32] = "Waiting for data...";  // Default message

void setup() {
  Serial.begin(115200);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  unsigned long start = millis();
  while (WiFi.status() != WL_CONNECTED && millis() - start < 15000) {
    Serial.print(".");
    delay(500);
  }

  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("\n‚úÖ Connected to WiFi!");
    Serial.print("üåê IP Address: ");
    Serial.println(WiFi.localIP());
    server.begin();
  } else {
    Serial.println("\n‚ùå Failed to connect to WiFi.");
  }

  // NRF24L01 setup
  if (!radio.begin()) {
    Serial.println("‚ùå NRF24L01 not found!");
    while (1);
  }

  radio.setPALevel(RF24_PA_LOW);
  radio.setChannel(108);
  radio.setDataRate(RF24_250KBPS);
  radio.openReadingPipe(0, address);
  radio.startListening();

  Serial.println("‚úÖ Receiver Ready!");
}

void loop() {
  // Receive message
  if (radio.available()) {
    radio.read(&message, sizeof(message));
    Serial.print("üì° Received: ");
    Serial.println(message);
  }

  // Serve dashboard
  WiFiClient client = server.available();
  if (client) {
    client.readStringUntil('\r');  // read request line
    client.flush();

    String html = "<!DOCTYPE html><html><head><meta http-equiv='refresh' content='2'/>"
                  "<style>body{font-family:sans-serif;text-align:center;}</style></head><body>"
                  "<h2>üì° NRF24L01 Web Dashboard</h2>"
                  "<p><b>Received Message:</b><br>" + String(message) + "</p>"
                  "</body></html>";

    client.println("HTTP/1.1 200 OK");
    client.println("Content-Type: text/html");
    client.println("Connection: close");
    client.println();
    client.print(html);
    delay(10);
  }
}


